tests/ui/issues/issue-14399.rs
==============================

Last edited: 2023-03-30 20:35:59

Contents:

.. code-block:: rs

    // run-pass
// #14399
// We'd previously ICE if we had a method call whose return
// value was coerced to a trait object. (v.clone() returns Box<B1>
// which is coerced to Box<A>).

// pretty-expanded FIXME #23616

#[derive(Clone)]
struct B1;

trait A { fn foo(&self) {} }
impl A for B1 {}

fn main() {
    let v: Box<_> = Box::new(B1);
    let _c: Box<dyn A> = v.clone();
}



clients/js/src/generated/types/createOrUpdateArgs.ts
====================================================

Last edited: 2023-08-01 17:12:05

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { none } from '@metaplex-foundation/umi';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  mapSerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  RuleSetRevisionInput,
  RuleSetRevisionInputArgs,
  getRuleSetRevisionInputSerializer,
} from '../../hooked';

export type CreateOrUpdateArgs = {
  __kind: 'V1';
  ruleSetRevision: RuleSetRevisionInput;
};

export type CreateOrUpdateArgsArgs = {
  __kind: 'V1';
  ruleSetRevision?: RuleSetRevisionInputArgs;
};

/** @deprecated Use `getCreateOrUpdateArgsSerializer()` without any argument instead. */
export function getCreateOrUpdateArgsSerializer(
  _context: object
): Serializer<CreateOrUpdateArgsArgs, CreateOrUpdateArgs>;
export function getCreateOrUpdateArgsSerializer(): Serializer<
  CreateOrUpdateArgsArgs,
  CreateOrUpdateArgs
>;
export function getCreateOrUpdateArgsSerializer(
  _context: object = {}
): Serializer<CreateOrUpdateArgsArgs, CreateOrUpdateArgs> {
  return dataEnum<CreateOrUpdateArgs>(
    [
      [
        'V1',
        mapSerializer<
          GetDataEnumKindContent<CreateOrUpdateArgsArgs, 'V1'>,
          any,
          GetDataEnumKindContent<CreateOrUpdateArgs, 'V1'>
        >(
          struct<GetDataEnumKindContent<CreateOrUpdateArgs, 'V1'>>([
            ['ruleSetRevision', getRuleSetRevisionInputSerializer()],
          ]),
          (value) => ({
            ...value,
            ruleSetRevision: value.ruleSetRevision ?? none(),
          })
        ),
      ],
    ],
    { description: 'CreateOrUpdateArgs' }
  ) as Serializer<CreateOrUpdateArgsArgs, CreateOrUpdateArgs>;
}

// Data Enum Helpers.
export function createOrUpdateArgs(
  kind: 'V1',
  data: GetDataEnumKindContent<CreateOrUpdateArgsArgs, 'V1'>
): GetDataEnumKind<CreateOrUpdateArgsArgs, 'V1'>;
export function createOrUpdateArgs<K extends CreateOrUpdateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<CreateOrUpdateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isCreateOrUpdateArgs<K extends CreateOrUpdateArgs['__kind']>(
  kind: K,
  value: CreateOrUpdateArgs
): value is CreateOrUpdateArgs & { __kind: K } {
  return value.__kind === kind;
}



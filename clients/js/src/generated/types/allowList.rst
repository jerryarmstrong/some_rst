clients/js/src/generated/types/allowList.ts
===========================================

Last edited: 2023-08-11 23:25:39

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  bytes,
  struct,
} from '@metaplex-foundation/umi/serializers';

/**
 * Guard that uses a merkle tree to specify the addresses allowed to mint.
 *
 * List of accounts required:
 *
 * 0. `[]` Pda created by the merkle proof instruction (seeds `["allow_list", merke tree root,
 * payer key, candy guard pubkey, candy machine pubkey]`).
 */

export type AllowList = {
  /** Merkle root of the addresses allowed to mint. */
  merkleRoot: Uint8Array;
};

export type AllowListArgs = AllowList;

/** @deprecated Use `getAllowListSerializer()` without any argument instead. */
export function getAllowListSerializer(
  _context: object
): Serializer<AllowListArgs, AllowList>;
export function getAllowListSerializer(): Serializer<AllowListArgs, AllowList>;
export function getAllowListSerializer(
  _context: object = {}
): Serializer<AllowListArgs, AllowList> {
  return struct<AllowList>([['merkleRoot', bytes({ size: 32 })]], {
    description: 'AllowList',
  }) as Serializer<AllowListArgs, AllowList>;
}



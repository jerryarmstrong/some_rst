clients/js/src/generated/types/nftGate.ts
=========================================

Last edited: 2023-08-11 23:25:39

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';

/**
 * Guard that restricts the transaction to holders of a specified collection.
 *
 * List of accounts required:
 *
 * 0. `[]` Token account of the NFT.
 * 1. `[]` Metadata account of the NFT.
 */

export type NftGate = { requiredCollection: PublicKey };

export type NftGateArgs = NftGate;

/** @deprecated Use `getNftGateSerializer()` without any argument instead. */
export function getNftGateSerializer(
  _context: object
): Serializer<NftGateArgs, NftGate>;
export function getNftGateSerializer(): Serializer<NftGateArgs, NftGate>;
export function getNftGateSerializer(
  _context: object = {}
): Serializer<NftGateArgs, NftGate> {
  return struct<NftGate>([['requiredCollection', publicKeySerializer()]], {
    description: 'NftGate',
  }) as Serializer<NftGateArgs, NftGate>;
}



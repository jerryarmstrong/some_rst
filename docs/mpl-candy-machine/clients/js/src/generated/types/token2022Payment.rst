clients/js/src/generated/types/token2022Payment.ts
==================================================

Last edited: 2023-08-11 23:25:39

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

/**
 * Guard that charges an amount in a specified spl-token as payment for the mint.
 *
 * List of accounts required:
 *
 * 0. `[writable]` Token account holding the required amount.
 * 1. `[writable]` Address of the ATA to receive the tokens.
 * 2. `[]` Mint account.
 * 3. `[]` SPL Token-2022 program account.
 */

export type Token2022Payment = {
  amount: bigint;
  mint: PublicKey;
  destinationAta: PublicKey;
};

export type Token2022PaymentArgs = {
  amount: number | bigint;
  mint: PublicKey;
  destinationAta: PublicKey;
};

/** @deprecated Use `getToken2022PaymentSerializer()` without any argument instead. */
export function getToken2022PaymentSerializer(
  _context: object
): Serializer<Token2022PaymentArgs, Token2022Payment>;
export function getToken2022PaymentSerializer(): Serializer<
  Token2022PaymentArgs,
  Token2022Payment
>;
export function getToken2022PaymentSerializer(
  _context: object = {}
): Serializer<Token2022PaymentArgs, Token2022Payment> {
  return struct<Token2022Payment>(
    [
      ['amount', u64()],
      ['mint', publicKeySerializer()],
      ['destinationAta', publicKeySerializer()],
    ],
    { description: 'Token2022Payment' }
  ) as Serializer<Token2022PaymentArgs, Token2022Payment>;
}



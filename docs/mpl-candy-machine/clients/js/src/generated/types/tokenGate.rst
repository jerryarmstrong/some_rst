clients/js/src/generated/types/tokenGate.ts
===========================================

Last edited: 2023-08-11 23:25:39

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

/**
 * Guard that restricts access to addresses that hold the specified spl-token.
 *
 * List of accounts required:
 *
 * 0. `[]` Token account holding the required amount.
 */

export type TokenGate = { amount: bigint; mint: PublicKey };

export type TokenGateArgs = { amount: number | bigint; mint: PublicKey };

/** @deprecated Use `getTokenGateSerializer()` without any argument instead. */
export function getTokenGateSerializer(
  _context: object
): Serializer<TokenGateArgs, TokenGate>;
export function getTokenGateSerializer(): Serializer<TokenGateArgs, TokenGate>;
export function getTokenGateSerializer(
  _context: object = {}
): Serializer<TokenGateArgs, TokenGate> {
  return struct<TokenGate>(
    [
      ['amount', u64()],
      ['mint', publicKeySerializer()],
    ],
    { description: 'TokenGate' }
  ) as Serializer<TokenGateArgs, TokenGate>;
}



clients/js/src/generated/types/ruleSetHeader.ts
===============================================

Last edited: 2023-08-01 17:12:05

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Serializer, struct, u64 } from '@metaplex-foundation/umi/serializers';
import { Key, KeyArgs, getKeySerializer } from '.';

export type RuleSetHeader = { key: Key; revMapVersionLocation: bigint };

export type RuleSetHeaderArgs = {
  key: KeyArgs;
  revMapVersionLocation: number | bigint;
};

/** @deprecated Use `getRuleSetHeaderSerializer()` without any argument instead. */
export function getRuleSetHeaderSerializer(
  _context: object
): Serializer<RuleSetHeaderArgs, RuleSetHeader>;
export function getRuleSetHeaderSerializer(): Serializer<
  RuleSetHeaderArgs,
  RuleSetHeader
>;
export function getRuleSetHeaderSerializer(
  _context: object = {}
): Serializer<RuleSetHeaderArgs, RuleSetHeader> {
  return struct<RuleSetHeader>(
    [
      ['key', getKeySerializer()],
      ['revMapVersionLocation', u64()],
    ],
    { description: 'RuleSetHeader' }
  ) as Serializer<RuleSetHeaderArgs, RuleSetHeader>;
}



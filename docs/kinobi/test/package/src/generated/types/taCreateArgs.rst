test/package/src/generated/types/taCreateArgs.ts
================================================

Last edited: 2023-08-04 12:58:33

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  bytes,
  string,
  struct,
  u32,
} from '@metaplex-foundation/umi/serializers';

export type TaCreateArgs = {
  ruleSetName: string;
  serializedRuleSet: Uint8Array;
};

export type TaCreateArgsArgs = TaCreateArgs;

/** @deprecated Use `getTaCreateArgsSerializer()` without any argument instead. */
export function getTaCreateArgsSerializer(
  _context: object
): Serializer<TaCreateArgsArgs, TaCreateArgs>;
export function getTaCreateArgsSerializer(): Serializer<
  TaCreateArgsArgs,
  TaCreateArgs
>;
export function getTaCreateArgsSerializer(
  _context: object = {}
): Serializer<TaCreateArgsArgs, TaCreateArgs> {
  return struct<TaCreateArgs>(
    [
      ['ruleSetName', string()],
      ['serializedRuleSet', bytes({ size: u32() })],
    ],
    { description: 'TaCreateArgs' }
  ) as Serializer<TaCreateArgsArgs, TaCreateArgs>;
}



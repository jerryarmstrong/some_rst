test/package/src/generated/types/collectionDetails.ts
=====================================================

Last edited: 2023-08-04 12:58:33

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type CollectionDetails = { __kind: 'V1'; size: bigint };

export type CollectionDetailsArgs = { __kind: 'V1'; size: number | bigint };

/** @deprecated Use `getCollectionDetailsSerializer()` without any argument instead. */
export function getCollectionDetailsSerializer(
  _context: object
): Serializer<CollectionDetailsArgs, CollectionDetails>;
export function getCollectionDetailsSerializer(): Serializer<
  CollectionDetailsArgs,
  CollectionDetails
>;
export function getCollectionDetailsSerializer(
  _context: object = {}
): Serializer<CollectionDetailsArgs, CollectionDetails> {
  return dataEnum<CollectionDetails>(
    [
      [
        'V1',
        struct<GetDataEnumKindContent<CollectionDetails, 'V1'>>([
          ['size', u64()],
        ]),
      ],
    ],
    { description: 'CollectionDetails' }
  ) as Serializer<CollectionDetailsArgs, CollectionDetails>;
}

// Data Enum Helpers.
export function collectionDetails(
  kind: 'V1',
  data: GetDataEnumKindContent<CollectionDetailsArgs, 'V1'>
): GetDataEnumKind<CollectionDetailsArgs, 'V1'>;
export function collectionDetails<K extends CollectionDetailsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<CollectionDetailsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isCollectionDetails<K extends CollectionDetails['__kind']>(
  kind: K,
  value: CollectionDetails
): value is CollectionDetails & { __kind: K } {
  return value.__kind === kind;
}



clients/js/src/generated/types/delegateArgs.ts
==============================================

Last edited: 2023-08-11 07:39:15

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Option,
  OptionOrNullable,
  PublicKey,
  none,
} from '@metaplex-foundation/umi';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  mapSerializer,
  option,
  publicKey as publicKeySerializer,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  AuthorizationData,
  AuthorizationDataArgs,
  getAuthorizationDataSerializer,
} from '.';

export type DelegateArgs =
  | { __kind: 'CollectionV1'; authorizationData: Option<AuthorizationData> }
  | {
      __kind: 'SaleV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'TransferV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | { __kind: 'DataV1'; authorizationData: Option<AuthorizationData> }
  | {
      __kind: 'UtilityV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'StakingV1';
      amount: bigint;
      authorizationData: Option<AuthorizationData>;
    }
  | { __kind: 'StandardV1'; amount: bigint }
  | {
      __kind: 'LockedTransferV1';
      amount: bigint;
      lockedAddress: PublicKey;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'ProgrammableConfigV1';
      authorizationData: Option<AuthorizationData>;
    }
  | { __kind: 'AuthorityItemV1'; authorizationData: Option<AuthorizationData> }
  | { __kind: 'DataItemV1'; authorizationData: Option<AuthorizationData> }
  | { __kind: 'CollectionItemV1'; authorizationData: Option<AuthorizationData> }
  | {
      __kind: 'ProgrammableConfigItemV1';
      authorizationData: Option<AuthorizationData>;
    };

export type DelegateArgsArgs =
  | {
      __kind: 'CollectionV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'SaleV1';
      amount?: number | bigint;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'TransferV1';
      amount?: number | bigint;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'DataV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'UtilityV1';
      amount?: number | bigint;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'StakingV1';
      amount?: number | bigint;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | { __kind: 'StandardV1'; amount?: number | bigint }
  | {
      __kind: 'LockedTransferV1';
      amount?: number | bigint;
      lockedAddress: PublicKey;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'ProgrammableConfigV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AuthorityItemV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'DataItemV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'CollectionItemV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'ProgrammableConfigItemV1';
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    };

/** @deprecated Use `getDelegateArgsSerializer()` without any argument instead. */
export function getDelegateArgsSerializer(
  _context: object
): Serializer<DelegateArgsArgs, DelegateArgs>;
export function getDelegateArgsSerializer(): Serializer<
  DelegateArgsArgs,
  DelegateArgs
>;
export function getDelegateArgsSerializer(
  _context: object = {}
): Serializer<DelegateArgsArgs, DelegateArgs> {
  return dataEnum<DelegateArgs>(
    [
      [
        'CollectionV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'CollectionV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'CollectionV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'CollectionV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'SaleV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'SaleV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'SaleV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'SaleV1'>>([
            ['amount', u64()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            amount: value.amount ?? 1,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'TransferV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'TransferV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'TransferV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'TransferV1'>>([
            ['amount', u64()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            amount: value.amount ?? 1,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'DataV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'DataV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'DataV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'DataV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'UtilityV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'UtilityV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'UtilityV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'UtilityV1'>>([
            ['amount', u64()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            amount: value.amount ?? 1,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'StakingV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'StakingV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'StakingV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'StakingV1'>>([
            ['amount', u64()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            amount: value.amount ?? 1,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'StandardV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'StandardV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'StandardV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'StandardV1'>>([
            ['amount', u64()],
          ]),
          (value) => ({ ...value, amount: value.amount ?? 1 })
        ),
      ],
      [
        'LockedTransferV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'LockedTransferV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'LockedTransferV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'LockedTransferV1'>>([
            ['amount', u64()],
            ['lockedAddress', publicKeySerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            amount: value.amount ?? 1,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'ProgrammableConfigV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'ProgrammableConfigV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'ProgrammableConfigV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'ProgrammableConfigV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AuthorityItemV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'AuthorityItemV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'AuthorityItemV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'AuthorityItemV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'DataItemV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'DataItemV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'DataItemV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'DataItemV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'CollectionItemV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'CollectionItemV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'CollectionItemV1'>
        >(
          struct<GetDataEnumKindContent<DelegateArgs, 'CollectionItemV1'>>([
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'ProgrammableConfigItemV1',
        mapSerializer<
          GetDataEnumKindContent<DelegateArgsArgs, 'ProgrammableConfigItemV1'>,
          any,
          GetDataEnumKindContent<DelegateArgs, 'ProgrammableConfigItemV1'>
        >(
          struct<
            GetDataEnumKindContent<DelegateArgs, 'ProgrammableConfigItemV1'>
          >([['authorizationData', option(getAuthorizationDataSerializer())]]),
          (value) => ({
            ...value,
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
    ],
    { description: 'DelegateArgs' }
  ) as Serializer<DelegateArgsArgs, DelegateArgs>;
}

// Data Enum Helpers.
export function delegateArgs(
  kind: 'CollectionV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'CollectionV1'>
): GetDataEnumKind<DelegateArgsArgs, 'CollectionV1'>;
export function delegateArgs(
  kind: 'SaleV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'SaleV1'>
): GetDataEnumKind<DelegateArgsArgs, 'SaleV1'>;
export function delegateArgs(
  kind: 'TransferV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'TransferV1'>
): GetDataEnumKind<DelegateArgsArgs, 'TransferV1'>;
export function delegateArgs(
  kind: 'DataV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'DataV1'>
): GetDataEnumKind<DelegateArgsArgs, 'DataV1'>;
export function delegateArgs(
  kind: 'UtilityV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'UtilityV1'>
): GetDataEnumKind<DelegateArgsArgs, 'UtilityV1'>;
export function delegateArgs(
  kind: 'StakingV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'StakingV1'>
): GetDataEnumKind<DelegateArgsArgs, 'StakingV1'>;
export function delegateArgs(
  kind: 'StandardV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'StandardV1'>
): GetDataEnumKind<DelegateArgsArgs, 'StandardV1'>;
export function delegateArgs(
  kind: 'LockedTransferV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'LockedTransferV1'>
): GetDataEnumKind<DelegateArgsArgs, 'LockedTransferV1'>;
export function delegateArgs(
  kind: 'ProgrammableConfigV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'ProgrammableConfigV1'>
): GetDataEnumKind<DelegateArgsArgs, 'ProgrammableConfigV1'>;
export function delegateArgs(
  kind: 'AuthorityItemV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'AuthorityItemV1'>
): GetDataEnumKind<DelegateArgsArgs, 'AuthorityItemV1'>;
export function delegateArgs(
  kind: 'DataItemV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'DataItemV1'>
): GetDataEnumKind<DelegateArgsArgs, 'DataItemV1'>;
export function delegateArgs(
  kind: 'CollectionItemV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'CollectionItemV1'>
): GetDataEnumKind<DelegateArgsArgs, 'CollectionItemV1'>;
export function delegateArgs(
  kind: 'ProgrammableConfigItemV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'ProgrammableConfigItemV1'>
): GetDataEnumKind<DelegateArgsArgs, 'ProgrammableConfigItemV1'>;
export function delegateArgs<K extends DelegateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<DelegateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isDelegateArgs<K extends DelegateArgs['__kind']>(
  kind: K,
  value: DelegateArgs
): value is DelegateArgs & { __kind: K } {
  return value.__kind === kind;
}



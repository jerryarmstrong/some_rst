clients/js/src/generated/types/leafInfo.ts
==========================================

Last edited: 2023-08-11 07:39:15

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  array,
  bytes,
  struct,
} from '@metaplex-foundation/umi/serializers';

export type LeafInfo = { leaf: Uint8Array; proof: Array<Uint8Array> };

export type LeafInfoArgs = LeafInfo;

/** @deprecated Use `getLeafInfoSerializer()` without any argument instead. */
export function getLeafInfoSerializer(
  _context: object
): Serializer<LeafInfoArgs, LeafInfo>;
export function getLeafInfoSerializer(): Serializer<LeafInfoArgs, LeafInfo>;
export function getLeafInfoSerializer(
  _context: object = {}
): Serializer<LeafInfoArgs, LeafInfo> {
  return struct<LeafInfo>(
    [
      ['leaf', bytes({ size: 32 })],
      ['proof', array(bytes({ size: 32 }))],
    ],
    { description: 'LeafInfo' }
  ) as Serializer<LeafInfoArgs, LeafInfo>;
}



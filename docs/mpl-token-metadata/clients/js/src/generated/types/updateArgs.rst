clients/js/src/generated/types/updateArgs.ts
============================================

Last edited: 2023-08-11 07:39:15

Contents:

.. code-block:: ts

    /**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Option,
  OptionOrNullable,
  PublicKey,
  none,
} from '@metaplex-foundation/umi';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  array,
  bool,
  dataEnum,
  mapSerializer,
  option,
  publicKey as publicKeySerializer,
  string,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';
import {
  AuthorizationData,
  AuthorizationDataArgs,
  CollectionDetailsToggle,
  CollectionDetailsToggleArgs,
  CollectionToggle,
  CollectionToggleArgs,
  Creator,
  CreatorArgs,
  RuleSetToggle,
  RuleSetToggleArgs,
  TokenStandard,
  TokenStandardArgs,
  UsesToggle,
  UsesToggleArgs,
  collectionDetailsToggle,
  collectionToggle,
  getAuthorizationDataSerializer,
  getCollectionDetailsToggleSerializer,
  getCollectionToggleSerializer,
  getCreatorSerializer,
  getRuleSetToggleSerializer,
  getTokenStandardSerializer,
  getUsesToggleSerializer,
  ruleSetToggle,
  usesToggle,
} from '.';

export type UpdateArgs =
  | {
      __kind: 'V1';
      newUpdateAuthority: Option<PublicKey>;
      data: Option<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: Option<Array<Creator>>;
      }>;
      primarySaleHappened: Option<boolean>;
      isMutable: Option<boolean>;
      collection: CollectionToggle;
      collectionDetails: CollectionDetailsToggle;
      uses: UsesToggle;
      ruleSet: RuleSetToggle;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsUpdateAuthorityV2';
      newUpdateAuthority: Option<PublicKey>;
      data: Option<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: Option<Array<Creator>>;
      }>;
      primarySaleHappened: Option<boolean>;
      isMutable: Option<boolean>;
      collection: CollectionToggle;
      collectionDetails: CollectionDetailsToggle;
      uses: UsesToggle;
      ruleSet: RuleSetToggle;
      tokenStandard: Option<TokenStandard>;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsAuthorityItemDelegateV2';
      newUpdateAuthority: Option<PublicKey>;
      primarySaleHappened: Option<boolean>;
      isMutable: Option<boolean>;
      tokenStandard: Option<TokenStandard>;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsCollectionDelegateV2';
      collection: CollectionToggle;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsDataDelegateV2';
      data: Option<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: Option<Array<Creator>>;
      }>;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsProgrammableConfigDelegateV2';
      ruleSet: RuleSetToggle;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsDataItemDelegateV2';
      data: Option<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: Option<Array<Creator>>;
      }>;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsCollectionItemDelegateV2';
      collection: CollectionToggle;
      authorizationData: Option<AuthorizationData>;
    }
  | {
      __kind: 'AsProgrammableConfigItemDelegateV2';
      ruleSet: RuleSetToggle;
      authorizationData: Option<AuthorizationData>;
    };

export type UpdateArgsArgs =
  | {
      __kind: 'V1';
      newUpdateAuthority?: OptionOrNullable<PublicKey>;
      data?: OptionOrNullable<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: OptionOrNullable<Array<CreatorArgs>>;
      }>;
      primarySaleHappened?: OptionOrNullable<boolean>;
      isMutable?: OptionOrNullable<boolean>;
      collection?: CollectionToggleArgs;
      collectionDetails?: CollectionDetailsToggleArgs;
      uses?: UsesToggleArgs;
      ruleSet?: RuleSetToggleArgs;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsUpdateAuthorityV2';
      newUpdateAuthority?: OptionOrNullable<PublicKey>;
      data?: OptionOrNullable<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: OptionOrNullable<Array<CreatorArgs>>;
      }>;
      primarySaleHappened?: OptionOrNullable<boolean>;
      isMutable?: OptionOrNullable<boolean>;
      collection?: CollectionToggleArgs;
      collectionDetails?: CollectionDetailsToggleArgs;
      uses?: UsesToggleArgs;
      ruleSet?: RuleSetToggleArgs;
      tokenStandard?: OptionOrNullable<TokenStandardArgs>;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsAuthorityItemDelegateV2';
      newUpdateAuthority?: OptionOrNullable<PublicKey>;
      primarySaleHappened?: OptionOrNullable<boolean>;
      isMutable?: OptionOrNullable<boolean>;
      tokenStandard?: OptionOrNullable<TokenStandardArgs>;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsCollectionDelegateV2';
      collection?: CollectionToggleArgs;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsDataDelegateV2';
      data?: OptionOrNullable<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: OptionOrNullable<Array<CreatorArgs>>;
      }>;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsProgrammableConfigDelegateV2';
      ruleSet?: RuleSetToggleArgs;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsDataItemDelegateV2';
      data?: OptionOrNullable<{
        name: string;
        symbol: string;
        uri: string;
        sellerFeeBasisPoints: number;
        creators: OptionOrNullable<Array<CreatorArgs>>;
      }>;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsCollectionItemDelegateV2';
      collection?: CollectionToggleArgs;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    }
  | {
      __kind: 'AsProgrammableConfigItemDelegateV2';
      ruleSet?: RuleSetToggleArgs;
      authorizationData?: OptionOrNullable<AuthorizationDataArgs>;
    };

/** @deprecated Use `getUpdateArgsSerializer()` without any argument instead. */
export function getUpdateArgsSerializer(
  _context: object
): Serializer<UpdateArgsArgs, UpdateArgs>;
export function getUpdateArgsSerializer(): Serializer<
  UpdateArgsArgs,
  UpdateArgs
>;
export function getUpdateArgsSerializer(
  _context: object = {}
): Serializer<UpdateArgsArgs, UpdateArgs> {
  return dataEnum<UpdateArgs>(
    [
      [
        'V1',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'V1'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'V1'>
        >(
          struct<GetDataEnumKindContent<UpdateArgs, 'V1'>>([
            ['newUpdateAuthority', option(publicKeySerializer())],
            [
              'data',
              option(
                struct<any>([
                  ['name', string()],
                  ['symbol', string()],
                  ['uri', string()],
                  ['sellerFeeBasisPoints', u16()],
                  ['creators', option(array(getCreatorSerializer()))],
                ])
              ),
            ],
            ['primarySaleHappened', option(bool())],
            ['isMutable', option(bool())],
            ['collection', getCollectionToggleSerializer()],
            ['collectionDetails', getCollectionDetailsToggleSerializer()],
            ['uses', getUsesToggleSerializer()],
            ['ruleSet', getRuleSetToggleSerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            newUpdateAuthority: value.newUpdateAuthority ?? none(),
            data: value.data ?? none(),
            primarySaleHappened: value.primarySaleHappened ?? none(),
            isMutable: value.isMutable ?? none(),
            collection: value.collection ?? collectionToggle('None'),
            collectionDetails:
              value.collectionDetails ?? collectionDetailsToggle('None'),
            uses: value.uses ?? usesToggle('None'),
            ruleSet: value.ruleSet ?? ruleSetToggle('None'),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsUpdateAuthorityV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsUpdateAuthorityV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsUpdateAuthorityV2'>
        >(
          struct<GetDataEnumKindContent<UpdateArgs, 'AsUpdateAuthorityV2'>>([
            ['newUpdateAuthority', option(publicKeySerializer())],
            [
              'data',
              option(
                struct<any>([
                  ['name', string()],
                  ['symbol', string()],
                  ['uri', string()],
                  ['sellerFeeBasisPoints', u16()],
                  ['creators', option(array(getCreatorSerializer()))],
                ])
              ),
            ],
            ['primarySaleHappened', option(bool())],
            ['isMutable', option(bool())],
            ['collection', getCollectionToggleSerializer()],
            ['collectionDetails', getCollectionDetailsToggleSerializer()],
            ['uses', getUsesToggleSerializer()],
            ['ruleSet', getRuleSetToggleSerializer()],
            ['tokenStandard', option(getTokenStandardSerializer())],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            newUpdateAuthority: value.newUpdateAuthority ?? none(),
            data: value.data ?? none(),
            primarySaleHappened: value.primarySaleHappened ?? none(),
            isMutable: value.isMutable ?? none(),
            collection: value.collection ?? collectionToggle('None'),
            collectionDetails:
              value.collectionDetails ?? collectionDetailsToggle('None'),
            uses: value.uses ?? usesToggle('None'),
            ruleSet: value.ruleSet ?? ruleSetToggle('None'),
            tokenStandard: value.tokenStandard ?? none(),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsAuthorityItemDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsAuthorityItemDelegateV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsAuthorityItemDelegateV2'>
        >(
          struct<
            GetDataEnumKindContent<UpdateArgs, 'AsAuthorityItemDelegateV2'>
          >([
            ['newUpdateAuthority', option(publicKeySerializer())],
            ['primarySaleHappened', option(bool())],
            ['isMutable', option(bool())],
            ['tokenStandard', option(getTokenStandardSerializer())],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            newUpdateAuthority: value.newUpdateAuthority ?? none(),
            primarySaleHappened: value.primarySaleHappened ?? none(),
            isMutable: value.isMutable ?? none(),
            tokenStandard: value.tokenStandard ?? none(),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsCollectionDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsCollectionDelegateV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsCollectionDelegateV2'>
        >(
          struct<GetDataEnumKindContent<UpdateArgs, 'AsCollectionDelegateV2'>>([
            ['collection', getCollectionToggleSerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            collection: value.collection ?? collectionToggle('None'),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsDataDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsDataDelegateV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsDataDelegateV2'>
        >(
          struct<GetDataEnumKindContent<UpdateArgs, 'AsDataDelegateV2'>>([
            [
              'data',
              option(
                struct<any>([
                  ['name', string()],
                  ['symbol', string()],
                  ['uri', string()],
                  ['sellerFeeBasisPoints', u16()],
                  ['creators', option(array(getCreatorSerializer()))],
                ])
              ),
            ],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            data: value.data ?? none(),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsProgrammableConfigDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<
            UpdateArgsArgs,
            'AsProgrammableConfigDelegateV2'
          >,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsProgrammableConfigDelegateV2'>
        >(
          struct<
            GetDataEnumKindContent<UpdateArgs, 'AsProgrammableConfigDelegateV2'>
          >([
            ['ruleSet', getRuleSetToggleSerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            ruleSet: value.ruleSet ?? ruleSetToggle('None'),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsDataItemDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsDataItemDelegateV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsDataItemDelegateV2'>
        >(
          struct<GetDataEnumKindContent<UpdateArgs, 'AsDataItemDelegateV2'>>([
            [
              'data',
              option(
                struct<any>([
                  ['name', string()],
                  ['symbol', string()],
                  ['uri', string()],
                  ['sellerFeeBasisPoints', u16()],
                  ['creators', option(array(getCreatorSerializer()))],
                ])
              ),
            ],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            data: value.data ?? none(),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsCollectionItemDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<UpdateArgsArgs, 'AsCollectionItemDelegateV2'>,
          any,
          GetDataEnumKindContent<UpdateArgs, 'AsCollectionItemDelegateV2'>
        >(
          struct<
            GetDataEnumKindContent<UpdateArgs, 'AsCollectionItemDelegateV2'>
          >([
            ['collection', getCollectionToggleSerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            collection: value.collection ?? collectionToggle('None'),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
      [
        'AsProgrammableConfigItemDelegateV2',
        mapSerializer<
          GetDataEnumKindContent<
            UpdateArgsArgs,
            'AsProgrammableConfigItemDelegateV2'
          >,
          any,
          GetDataEnumKindContent<
            UpdateArgs,
            'AsProgrammableConfigItemDelegateV2'
          >
        >(
          struct<
            GetDataEnumKindContent<
              UpdateArgs,
              'AsProgrammableConfigItemDelegateV2'
            >
          >([
            ['ruleSet', getRuleSetToggleSerializer()],
            ['authorizationData', option(getAuthorizationDataSerializer())],
          ]),
          (value) => ({
            ...value,
            ruleSet: value.ruleSet ?? ruleSetToggle('None'),
            authorizationData: value.authorizationData ?? none(),
          })
        ),
      ],
    ],
    { description: 'UpdateArgs' }
  ) as Serializer<UpdateArgsArgs, UpdateArgs>;
}

// Data Enum Helpers.
export function updateArgs(
  kind: 'V1',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'V1'>
): GetDataEnumKind<UpdateArgsArgs, 'V1'>;
export function updateArgs(
  kind: 'AsUpdateAuthorityV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsUpdateAuthorityV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsUpdateAuthorityV2'>;
export function updateArgs(
  kind: 'AsAuthorityItemDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsAuthorityItemDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsAuthorityItemDelegateV2'>;
export function updateArgs(
  kind: 'AsCollectionDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsCollectionDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsCollectionDelegateV2'>;
export function updateArgs(
  kind: 'AsDataDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsDataDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsDataDelegateV2'>;
export function updateArgs(
  kind: 'AsProgrammableConfigDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsProgrammableConfigDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsProgrammableConfigDelegateV2'>;
export function updateArgs(
  kind: 'AsDataItemDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsDataItemDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsDataItemDelegateV2'>;
export function updateArgs(
  kind: 'AsCollectionItemDelegateV2',
  data: GetDataEnumKindContent<UpdateArgsArgs, 'AsCollectionItemDelegateV2'>
): GetDataEnumKind<UpdateArgsArgs, 'AsCollectionItemDelegateV2'>;
export function updateArgs(
  kind: 'AsProgrammableConfigItemDelegateV2',
  data: GetDataEnumKindContent<
    UpdateArgsArgs,
    'AsProgrammableConfigItemDelegateV2'
  >
): GetDataEnumKind<UpdateArgsArgs, 'AsProgrammableConfigItemDelegateV2'>;
export function updateArgs<K extends UpdateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<UpdateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isUpdateArgs<K extends UpdateArgs['__kind']>(
  kind: K,
  value: UpdateArgs
): value is UpdateArgs & { __kind: K } {
  return value.__kind === kind;
}



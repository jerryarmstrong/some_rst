packages/gumdrop/src/components/AppBar/index.tsx
================================================

Last edited: 2022-08-25 19:21:42

Contents:

.. code-block:: tsx

    import React from 'react';
import { Link, useLocation } from 'react-router-dom';

import { Button, Modal } from 'antd';
import { MenuOutlined } from '@ant-design/icons';
import { useWallet } from '@solana/wallet-adapter-react';

import closeSvg from './close.svg';
import {
  Cog,
  CurrentUserBadge,
  CurrentUserBadgeMobile,
} from '../CurrentUserBadge';
import { ConnectButton } from '../ConnectButton';

function getWindowDimensions() {
  const { innerWidth: width, innerHeight: height } = window;
  return {
    width,
    height,
  };
}

export function useWindowDimensions() {
  const [windowDimensions, setWindowDimensions] = React.useState(
    getWindowDimensions(),
  );

  React.useEffect(() => {
    function handleResize() {
      setWindowDimensions(getWindowDimensions());
    }

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  return windowDimensions;
}

export const LogoLink = () => {
  return (
    <Link to={`/`}>
      <p className={'app-logo'}>GUMDROP</p>
    </Link>
  );
};

export const MetaplexMenu = () => {
  const { width } = useWindowDimensions();
  const [isModalVisible, setIsModalVisible] = React.useState<boolean>(false);
  const { connected } = useWallet();

  if (width <= 768)
    return (
      <>
        <Modal
          title={<LogoLink />}
          visible={isModalVisible}
          footer={null}
          className={'modal-box'}
          closeIcon={
            <img onClick={() => setIsModalVisible(false)} src={closeSvg} />
          }
        >
          <div className="site-card-wrapper mobile-menu-modal">
            <div className="actions">
              {!connected ? (
                <div className="actions-buttons">
                  <ConnectButton onClick={() => setIsModalVisible(false)}>
                    Connect Wallet
                  </ConnectButton>
                  {/*<HowToBuyModal
                    onClick={() => setIsModalVisible(false)}
                    buttonClassName="black-btn"
                  />*/}
                </div>
              ) : (
                <>
                  <CurrentUserBadgeMobile
                    showBalance={false}
                    showAddress={true}
                    iconSize={24}
                    closeModal={() => {
                      setIsModalVisible(false);
                    }}
                  />
                  <div className="wallet-wrapper">
                    <Button
                      className="wallet-key"
                      onClick={() => setIsModalVisible(false)}
                    >
                      <Link to="/">{homeSvg(location.pathname === '/')}</Link>
                    </Button>
                  </div>
                  <div className="wallet-wrapper">
                    <Button
                      className="wallet-key"
                      onClick={() => setIsModalVisible(false)}
                    >
                      <Link to="/claim">
                        {gumballsSvg(location.pathname === '/claim')}
                      </Link>
                    </Button>
                  </div>
                  <Cog />
                </>
              )}
            </div>
          </div>
        </Modal>
        <MenuOutlined
          onClick={() => setIsModalVisible(true)}
          style={{ fontSize: '1.4rem' }}
        />
      </>
    );

  return null;
};
export const MobileNavbar = () => {
  return (
    <div id="mobile-navbar">
      <LogoLink />
      <div className="mobile-menu">
        <MetaplexMenu />
      </div>
    </div>
  );
};

const homeSvg = (filled: boolean) => {
  const props = filled
    ? {
        fill: 'none',
        stroke: '#d0bdf4',
        strokeWidth: '1',
      }
    : {
        fill: 'none',
        stroke: 'white',
        strokeWidth: '1',
      };
  return (
    <svg
      aria-label="Home"
      height="20"
      width="20"
      viewBox="0 0 24 24"
      {...props}
    >
      <path d="M22 23h-6.001a1 1 0 01-1-1v-5.455a2.997 2.997 0 10-5.993 0V22a1 1 0 01-1 1H2a1 1 0 01-1-1V11.543a1.002 1.002 0 01.31-.724l10-9.543a1.001 1.001 0 011.38 0l10 9.543a1.002 1.002 0 01.31.724V22a1 1 0 01-1 1z"></path>
    </svg>
  );
};

const gumballsSvg = (filled: boolean) => {
  const props = filled ? { fill: '#d0bdf4' } : { fill: 'white' };
  return (
    <svg width="20" height="20" viewBox="0 0 479.352 479.352" {...props}>
      <path
        d="M393.265,415.733c41.024-41.025,63.618-95.571,63.618-153.589s-22.594-112.564-63.618-153.589
        c-41.025-41.025-95.57-63.619-153.589-63.619c-0.473,0-0.949,0.009-1.424,0.012L223.074,18.66
        c-5.85-10.131-16.755-16.424-28.462-16.424c-5.738,0-11.409,1.522-16.399,4.404l-39.334,22.709C137.616,12.956,123.882,0,107.171,0
        C89.629,0,75.357,14.271,75.357,31.813c0,10.872,5.485,20.484,13.831,26.225l-39.07,22.557
        c-15.682,9.054-21.074,29.179-12.021,44.862l14.839,25.702c-19.945,33.498-30.468,71.743-30.468,110.986
        c0,58.018,22.594,112.564,63.618,153.589c31.781,31.781,71.679,52.491,115.017,60.215c2.293,0.598,4.669,0.981,7.105,1.148
        c10.332,1.49,20.84,2.256,31.466,2.256s21.135-0.766,31.466-2.256c2.436-0.167,4.812-0.551,7.105-1.148
        C321.585,468.224,361.483,447.514,393.265,415.733z M107.171,20c6.514,0,11.813,5.299,11.813,11.813s-5.299,11.813-11.813,11.813
        s-11.813-5.299-11.813-11.813S100.657,20,107.171,20z M268.974,457.173c-0.17,0.005-0.335,0.026-0.506,0.026
        c-10.362,0-18.792-8.43-18.792-18.792c0-5.649,2.517-10.712,6.476-14.16c2.106-0.993,4.107-2.172,5.986-3.512
        c1.982-0.712,4.107-1.121,6.33-1.121s4.349,0.408,6.33,1.121c1.879,1.34,3.879,2.519,5.986,3.512
        c3.958,3.448,6.476,8.51,6.476,14.16c0,8.41-5.554,15.546-13.186,17.937C272.381,456.642,270.681,456.917,268.974,457.173z
         M205.278,456.343c-7.632-2.391-13.186-9.527-13.186-17.937c0-5.649,2.517-10.712,6.476-14.16c2.106-0.993,4.107-2.172,5.986-3.512
        c1.982-0.712,4.107-1.121,6.33-1.121s4.349,0.408,6.33,1.121c1.879,1.34,3.879,2.519,5.986,3.512
        c3.958,3.448,6.476,8.51,6.476,14.16c0,10.362-8.43,18.792-18.792,18.792c-0.171,0-0.336-0.021-0.506-0.026
        C208.671,456.917,206.97,456.642,205.278,456.343z M290.929,406.809c-1.879-1.34-3.879-2.519-5.986-3.512
        c-3.958-3.448-6.476-8.51-6.476-14.16c0-10.362,8.43-18.792,18.792-18.792s18.792,8.43,18.792,18.792s-8.43,18.792-18.792,18.792
        C295.036,407.93,292.911,407.521,290.929,406.809z M246.006,406.809c-1.982,0.712-4.107,1.121-6.33,1.121s-4.349-0.408-6.33-1.121
        c-1.879-1.34-3.879-2.519-5.986-3.512c-3.958-3.448-6.476-8.51-6.476-14.16c0-10.362,8.43-18.792,18.792-18.792
        s18.792,8.43,18.792,18.792c0,5.649-2.517,10.712-6.476,14.16C249.885,404.29,247.885,405.469,246.006,406.809z M188.422,406.809
        c-1.982,0.712-4.107,1.121-6.33,1.121c-10.362,0-18.792-8.43-18.792-18.792s8.43-18.792,18.792-18.792s18.792,8.43,18.792,18.792
        c0,5.649-2.517,10.712-6.476,14.16C192.302,404.29,190.301,405.469,188.422,406.809z M85.394,323.574
        c0.597-0.325,1.182-0.667,1.76-1.021c2.571-1.323,5.476-2.084,8.561-2.084s5.99,0.761,8.561,2.084
        c0.578,0.354,1.163,0.697,1.76,1.021c5.097,3.365,8.471,9.136,8.471,15.687c0,10.362-8.43,18.792-18.792,18.792
        s-18.792-8.43-18.792-18.792C76.923,332.71,80.297,326.939,85.394,323.574z M144.738,322.553c2.571-1.323,5.477-2.084,8.562-2.084
        c3.085,0,5.99,0.761,8.561,2.084c0.578,0.354,1.163,0.697,1.76,1.021c5.097,3.365,8.471,9.136,8.471,15.687
        c0,10.362-8.43,18.792-18.792,18.792s-18.793-8.43-18.793-18.792c0-6.551,3.375-12.322,8.471-15.687
        C143.575,323.25,144.161,322.907,144.738,322.553z M202.323,322.553c2.571-1.323,5.476-2.084,8.561-2.084s5.99,0.761,8.561,2.084
        c0.578,0.354,1.163,0.697,1.76,1.021c5.097,3.365,8.471,9.136,8.471,15.687c0,10.362-8.43,18.792-18.792,18.792
        s-18.792-8.43-18.792-18.792c0-6.551,3.374-12.322,8.471-15.687C201.159,323.25,201.745,322.907,202.323,322.553z M259.906,322.553
        c2.571-1.323,5.476-2.084,8.561-2.084s5.99,0.761,8.561,2.084c0.578,0.354,1.163,0.697,1.76,1.021
        c5.097,3.365,8.471,9.136,8.471,15.687c0,10.362-8.43,18.792-18.792,18.792s-18.792-8.43-18.792-18.792
        c0-6.551,3.374-12.322,8.471-15.687C258.743,323.25,259.329,322.907,259.906,322.553z M317.49,322.553
        c2.571-1.323,5.476-2.084,8.561-2.084c3.085,0,5.991,0.761,8.562,2.084c0.578,0.354,1.163,0.697,1.76,1.021
        c5.097,3.365,8.471,9.136,8.471,15.687c0,10.362-8.431,18.792-18.793,18.792s-18.792-8.43-18.792-18.792
        c0-6.551,3.374-12.322,8.471-15.687C316.327,323.25,316.913,322.907,317.49,322.553z M375.075,322.553
        c2.571-1.323,5.476-2.084,8.561-2.084s5.99,0.761,8.561,2.084c0.578,0.354,1.163,0.697,1.76,1.021
        c5.097,3.365,8.471,9.136,8.471,15.687c0,10.362-8.43,18.792-18.792,18.792s-18.792-8.43-18.792-18.792
        c0-6.551,3.374-12.322,8.471-15.687C373.912,323.25,374.498,322.907,375.075,322.553z M124.507,370.346
        c10.362,0,18.793,8.43,18.793,18.792s-8.431,18.792-18.793,18.792s-18.792-8.43-18.792-18.792S114.145,370.346,124.507,370.346z
         M354.845,370.346c10.362,0,18.792,8.43,18.792,18.792s-8.43,18.792-18.792,18.792s-18.793-8.43-18.793-18.792
        S344.482,370.346,354.845,370.346z M391.747,377.194c3.882-0.829,7.549-2.244,10.908-4.142c-2.906,4.256-5.977,8.39-9.198,12.399
        C393.187,382.597,392.604,379.835,391.747,377.194z M420.566,327.395c2.003-0.429,3.948-1.017,5.824-1.744
        c-1.25,3.664-2.614,7.276-4.071,10.84C422.095,333.342,421.499,330.294,420.566,327.395z M412.429,308.261
        c-3.084,0-5.99-0.761-8.561-2.083c-0.578-0.355-1.164-0.698-1.762-1.023c-5.096-3.365-8.469-9.136-8.469-15.686
        c0-10.362,8.43-18.792,18.792-18.792s18.792,8.43,18.792,18.792C431.221,299.831,422.791,308.261,412.429,308.261z M365.167,305.155
        c-0.598,0.325-1.184,0.668-1.762,1.023c-2.571,1.323-5.476,2.083-8.561,2.083c-3.085,0-5.99-0.761-8.561-2.084
        c-0.578-0.355-1.164-0.698-1.762-1.022c-5.096-3.365-8.47-9.136-8.47-15.686c0-10.362,8.431-18.792,18.793-18.792
        s18.792,8.43,18.792,18.792C373.637,296.019,370.263,301.79,365.167,305.155z M307.582,305.155
        c-0.598,0.325-1.184,0.668-1.762,1.023c-2.571,1.323-5.476,2.083-8.561,2.083s-5.99-0.761-8.561-2.083
        c-0.578-0.355-1.164-0.698-1.762-1.023c-5.096-3.365-8.469-9.136-8.469-15.686c0-10.362,8.43-18.792,18.792-18.792
        s18.792,8.43,18.792,18.792C316.052,296.019,312.678,301.79,307.582,305.155z M249.998,305.155
        c-0.598,0.325-1.184,0.668-1.762,1.023c-2.571,1.323-5.476,2.083-8.561,2.083s-5.99-0.761-8.561-2.083
        c-0.578-0.355-1.164-0.698-1.762-1.023c-5.096-3.365-8.469-9.136-8.469-15.686c0-10.362,8.43-18.792,18.792-18.792
        s18.792,8.43,18.792,18.792C258.468,296.019,255.094,301.79,249.998,305.155z M192.414,305.155
        c-0.598,0.325-1.184,0.668-1.762,1.023c-2.571,1.323-5.476,2.083-8.561,2.083s-5.99-0.761-8.561-2.083
        c-0.578-0.355-1.164-0.698-1.762-1.023c-5.096-3.365-8.469-9.136-8.469-15.686c0-10.362,8.43-18.792,18.792-18.792
        s18.792,8.43,18.792,18.792C200.884,296.019,197.51,301.79,192.414,305.155z M134.83,305.155c-0.598,0.325-1.184,0.668-1.762,1.022
        c-2.571,1.323-5.476,2.084-8.561,2.084c-3.084,0-5.99-0.761-8.561-2.083c-0.578-0.355-1.164-0.698-1.762-1.023
        c-5.096-3.365-8.469-9.136-8.469-15.686c0-10.362,8.43-18.792,18.792-18.792s18.793,8.43,18.793,18.792
        C143.3,296.019,139.926,301.79,134.83,305.155z M77.245,305.155c-0.598,0.325-1.184,0.668-1.762,1.023
        c-2.571,1.323-5.476,2.083-8.561,2.083c-10.362,0-18.792-8.43-18.792-18.792c0-10.362,8.43-18.792,18.792-18.792
        s18.792,8.43,18.792,18.792C85.715,296.019,82.341,301.79,77.245,305.155z M58.786,327.395c-0.934,2.899-1.53,5.947-1.753,9.097
        c-1.456-3.564-2.821-7.176-4.071-10.84C54.839,326.378,56.783,326.966,58.786,327.395z M87.604,377.194
        c-0.857,2.641-1.439,5.403-1.71,8.257c-3.221-4.009-6.293-8.143-9.198-12.399C80.056,374.95,83.722,376.364,87.604,377.194z
         M153.3,415.104c5.332,5.907,12.453,10.164,20.498,11.924c-1.107,3.6-1.706,7.42-1.706,11.379c0,3.25,0.407,6.405,1.163,9.424
        c-14.662-5.261-28.523-12.211-41.352-20.616C140.317,425.583,147.77,421.23,153.3,415.104z M305.554,427.028
        c8.045-1.76,15.166-6.017,20.498-11.924c5.53,6.126,12.983,10.479,21.397,12.11c-12.829,8.405-26.69,15.355-41.352,20.616
        c0.756-3.019,1.163-6.174,1.163-9.424C307.26,434.448,306.661,430.628,305.554,427.028z M436.847,259.355
        c-6.673-5.421-15.171-8.679-24.419-8.679c-11.412,0-21.687,4.956-28.792,12.826c-7.105-7.87-17.38-12.826-28.792-12.826
        c-11.413,0-21.688,4.956-28.793,12.826c-7.105-7.87-17.38-12.826-28.792-12.826s-21.687,4.956-28.792,12.826
        c-7.105-7.87-17.38-12.826-28.792-12.826s-21.687,4.956-28.792,12.826c-7.105-7.87-17.38-12.826-28.792-12.826
        s-21.687,4.956-28.792,12.826c-7.105-7.87-17.38-12.826-28.793-12.826c-11.412,0-21.687,4.956-28.792,12.826
        c-7.105-7.87-17.38-12.826-28.792-12.826c-9.252,0-17.755,3.261-24.43,8.687c0.489-35.092,10.233-69.212,28.292-99.09
        l165.016-95.272c1.294-0.025,2.586-0.065,3.874-0.065C347.484,64.937,435.348,151.896,436.847,259.355z M60.118,97.915
        L188.213,23.96c1.954-1.128,4.167-1.724,6.399-1.724c4.584,0,8.854,2.461,11.142,6.424l13.248,22.946L68.666,138.403l-3.468-6.007
        l121.89-70.299c4.784-2.759,6.426-8.875,3.666-13.659c-2.76-4.784-8.875-6.427-13.658-3.667L55.217,115.065
        C51.983,108.992,54.115,101.381,60.118,97.915z M238.437,81.505c39.145,0,76.391,12.315,107.711,35.613
        c30.706,22.84,53.017,54.101,64.521,90.402c1.668,5.265-1.247,10.885-6.513,12.554c-1.005,0.318-2.022,0.47-3.023,0.47
        c-4.242,0-8.18-2.722-9.53-6.981c-21.239-67.025-82.792-112.057-153.165-112.057c-5.522,0-10-4.477-10-10
        S232.914,81.505,238.437,81.505z"
      />
    </svg>
  );
};

export const AppBar = () => {
  const { connected } = useWallet();
  const location = useLocation();
  return (
    <>
      <MobileNavbar />
      <div id="desktop-navbar">
        <div className="app-left">
          <LogoLink />
        </div>
        <div className="app-right">
          {!connected && (
            <ConnectButton style={{ padding: '21px 20px' }}>
              Connect Wallet
            </ConnectButton>
          )}
          {connected && (
            <>
              <CurrentUserBadge
                showBalance={false}
                showAddress={true}
                iconSize={24}
              />
              <div className="wallet-wrapper">
                <Button className="wallet-key">
                  <Link to="/">{homeSvg(location.pathname === '/')}</Link>
                </Button>
              </div>
              <div className="wallet-wrapper">
                <Button className="wallet-key">
                  <Link to="/claim">
                    {gumballsSvg(location.pathname === '/claim')}
                  </Link>
                </Button>
              </div>
              <Cog />
            </>
          )}
        </div>
      </div>
    </>
  );
};


